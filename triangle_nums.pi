% calculate triangle nums that sum to a given number

import cp.

main =>
    Print_Solutions = false,
    Range = 1..1000,
    Counts = [],
    foreach(N in Range)
        Solution = triangle_num_sums(N),
        Count = last(Solution),
        Counts := Counts ++ [Count],
        printf("%d, ", Count),
        if Print_Solutions then
                printf("Solution: %w\n", Solution)
        end,
    end,
    println("\b"),
    println(Counts).

triangle_num_sums(N) = (Solutions, Num_solutions) =>
    MaxT = ceiling((sqrt(8*N + 1) - 1)) // 2,
    TriangleNums = [T1, T2, T3],
    TriangleNums :: 0..MaxT,
    sum([T * (T + 1) // 2 : T in TriangleNums]) #= N,
    T1 #=< T2,
    T2 #=< T3,
    Solutions = solve_all([ff], TriangleNums),
    Num_solutions = length(Solutions).
